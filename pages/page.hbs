<style>
.card-img, .card-img-bottom, .card-img-top {
  height: 200px;
}
.container{
  margin-left: 30rem;
}
#left_panel{
  background-color: #758c70;
  width: 23rem;
  height: 30rem;
  margin-top: 1rem;
  position: absolute;
  margin-left: 1rem;
}
</style>
  <div class="row row-cols-2 row-cols-lg-5 g-2 g-lg-3">
{{#if data.length}}
{{#each data}}
  <div class="card" style="width: 16rem;">
        <img src="{{img}}" class="card-img-top" alt="..." style="align-self: center;">
        <div class="card-body">
          <h5 class="card-title">{{brand}}</h5>
          <p class="card-text">{{model}} </p>
          <p>ціна: {{price}}</p>
          {{!-- <a href="#" class="btn btn-primary">Go somewhere</a> --}}
          <button class="btn btn-primary" code="{{code}}" id="{{code}}" onclick="bo({{code}})">купити</button>
        </div>
      </div>
  {{/each}}
{{else}}
    <p>no data</p>
{{/if}}
</div>
<script src="/nouislider.js"></script>
<script>
  
function splitString(stringToSplit, separator) {
    const arrayOfStrings = stringToSplit.split(separator);
    return(arrayOfStrings);
}
String.prototype.replaceAll = function(search, replacement) {
    var target = this;
    return target.split(search).join(replacement);
};
function left_panel(){
  let naw_panel = document.getElementById('naw_panel');
  naw_panel.insertAdjacentHTML('afterend',
  `<div id='left_panel'>
    <fieldset><legend>ціна</legend>
    <div id='left_price'></div>
      <div id="slider" style="width: 90%;margin-left: 5%;"></div>
      <div id='right_price'></div>
    </fieldset>
    <button onclick='formation()'>Оформити замовлення <i class="icofont-check-alt"></i></button>
  </div>`);

  let left_price = document.getElementById('left_price');
  let right_price = document.getElementById('right_price');
  
  window.onload = function baka(){
    var elems = document.querySelectorAll('.dropdown-trigger');
    var dropdowns = document.querySelectorAll('.dropdown-trigger')
    for (var i = 0; i < dropdowns.length; i++){
      M.Dropdown.init(dropdowns[i]);
    }
  }

  let get_url = window.location.href;
  get_url = get_url.split('/');
  let data =JSON.stringify({
    "table" : get_url[get_url.length-1]
  })
  let lft_panel = new XMLHttpRequest();
  lft_panel.open("POST", "/sorting/left_panel_sort", true);   
  lft_panel.setRequestHeader("Content-Type", "application/json");
  lft_panel.addEventListener("load", function () {
    let lft_panel_resp = lft_panel.response;
    console.log(lft_panel_resp)
    lft_panel_resp = lft_panel_resp.replaceAll("][",",");
    lft_panel_resp = lft_panel_resp.slice(1,lft_panel_resp.length-1);
    left_panel_formation(lft_panel_resp);
  });
  lft_panel.send(data);
}

left_panel();


function left_panel_formation(data){
  let lft_inf = data.split(",");
  let lft_p = document.getElementById('left_panel');
  let min = 0;
  let max = 100;
  for(let i = 0;i<lft_inf.length;i++){
    let json_obj = JSON.parse(lft_inf[i]);
    let check = true;
    
    for(let key in json_obj){
      if(key != 'price'){
        for(let elem of lft_p.childNodes){
          if(key == elem.id){
            check = false;
          }
        }
        if(check){
          let div = document.createElement('div');
          div.id = key;
          div.className = 'left_panel_sort';
          div.innerHTML = `<input class="form-check-input" type="checkbox" value="`+json_obj[key]+`" id="flexCheckDefault"> 
          <label class="form-check-label" for="flexCheckDefault">`+json_obj[key]+`</label>`;
          lft_p.appendChild(div)
        }else{
          let lft_id = document.getElementById(key);
          lft_id.innerHTML+=`<input class="form-check-input" type="checkbox" value="`+json_obj[key]+`" id="flexCheckDefault"> 
          <label class="form-check-label" for="flexCheckDefault">`+json_obj[key]+`</label>`;
        }
      }else{
        let chyslo = json_obj[key];
        if(chyslo>max){
          min = max
          max = chyslo;
        }else{
          min = chyslo;
        }
      }
    }
    
  }
  max = max.toString();
  min = min.toString();
  console.log(min);
  console.log(max)
  noUiSlider.create(slider, {
    start: [min, max],
    connect: true,
    range: {
      'min': parseInt(min),
      'max': parseInt(max)
    }
  });
  let touch_area = document.querySelectorAll('.noUi-touch-area'); 

  slider.noUiSlider.on('update', ()=>{
    let inf = slider.noUiSlider.get();
    left_price.innerHTML = inf[0];
    right_price.innerHTML = inf[1];
  })
}


  function bo(id){
    let element = document.getElementById(id);
    let code = element.getAttribute('code');
    let data = '';

    if(localStorage.getItem('name') !== null){
      data = JSON.stringify({
      "code": code,
      "login": localStorage.getItem('login')
      });
      let request = new XMLHttpRequest();
      request.open("POST", "/buy_bttn", true);   
      request.setRequestHeader("Content-Type", "application/json");
      request.addEventListener("load", function () {
        console.log(request.response)
      });
     request.send(data);
    }else{
      if(sessionStorage.getItem('корзина') === null || sessionStorage.getItem('корзина') == ""){
        sessionStorage.setItem('корзина',code+':1,');
      }else{
        let inf = sessionStorage.getItem('корзина')
        data = splitString(inf,',');
        let new_inf = '';
        let bool=false;
        for(let i = 0;i<data.length-1;i++){
          let data2 = splitString(data[i],':');
          if(data2[0] == code){
            data2[1] = parseInt(data2[1])+1; 
            console.log(data2[1])
            bool = true;
          }
          new_inf+=data2[0]+":"+data2[1]+","
        }
        if(!bool){
          new_inf+=code+":1,";
        }
        sessionStorage.setItem('корзина',new_inf);
      }
  
    }
  
  }
function formation(){
  let lft_panel = document.getElementById('left_panel');

}
</script>